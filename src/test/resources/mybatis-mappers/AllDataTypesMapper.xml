<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sandbox.alltype.dao.impl.AllDataTypesDaoImpl">
  <resultMap id="BASE_RESULT_MAP" type="sandbox.alltype.entity.AllDataTypes">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="type_bigint" jdbcType="BIGINT" property="typeBigint" />
    <result column="type_varchar" jdbcType="VARCHAR" property="typeVarchar" />
    <result column="type_tinyint" jdbcType="TINYINT" property="typeTinyint" />
    <result column="type_smallint" jdbcType="SMALLINT" property="typeSmallint" />
    <result column="type_mediumint" jdbcType="INTEGER" property="typeMediumint" />
    <result column="type_int" jdbcType="INTEGER" property="typeInt" />
    <result column="type_date" jdbcType="DATE" property="typeDate" />
    <result column="type_float" jdbcType="REAL" property="typeFloat" />
    <result column="type_double" jdbcType="DOUBLE" property="typeDouble" />
    <result column="type_decimal" jdbcType="DECIMAL" property="typeDecimal" />
    <result column="type_datetime" jdbcType="TIMESTAMP" property="typeDatetime" />
    <result column="type_timestamp" jdbcType="TIMESTAMP" property="typeTimestamp" />
    <result column="type_time" jdbcType="TIME" property="typeTime" />
    <result column="type_year" jdbcType="DATE" property="typeYear" />
    <result column="type_char" jdbcType="CHAR" property="typeChar" />
    <result column="type_tinytext" jdbcType="VARCHAR" property="typeTinytext" />
    <result column="type_enum" jdbcType="CHAR" property="typeEnum" />
    <result column="type_set" jdbcType="CHAR" property="typeSet" />
    <result column="type_bool" jdbcType="BIT" property="typeBool" />
    <result column="type_text" jdbcType="LONGVARCHAR" property="typeText" />
    <result column="type_tinyblob" jdbcType="BINARY" property="typeTinyblob" />
    <result column="type_blob" jdbcType="LONGVARBINARY" property="typeBlob" />
    <result column="type_mediumblob" jdbcType="LONGVARBINARY" property="typeMediumblob" />
    <result column="type_mediumtext" jdbcType="LONGVARCHAR" property="typeMediumtext" />
    <result column="type_longblob" jdbcType="LONGVARBINARY" property="typeLongblob" />
    <result column="type_longtext" jdbcType="LONGVARCHAR" property="typeLongtext" />
    <result column="type_binary" jdbcType="BINARY" property="typeBinary" />
    <result column="type_varbinary" jdbcType="VARBINARY" property="typeVarbinary" />
  </resultMap>
  <sql id="WHERE_CLAUSE">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="bracketCriteria" separator="or">
        <if test="bracketCriteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="bracketCriteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="WHERE_CLAUSE_FOR_UPDATE">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="criteria.oredCriteria" item="bracketCriteria" separator="or">
        <if test="bracketCriteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="bracketCriteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="BASE_COLUMN_LIST">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    type_bigint, type_varchar, type_tinyint, type_smallint, type_mediumint, 
  type_int, type_date, type_float, type_double, type_decimal, 
  type_datetime, type_timestamp, type_time, type_year, type_char, 
  type_tinytext, type_enum, type_set, type_bool, type_text, 
  type_tinyblob, type_blob, type_mediumblob, type_mediumtext, type_longblob, 
  type_longtext, type_binary, type_varbinary
  </sql>
  <sql id="PAGING">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <if test="offset != null">
      offset #{offset}
    </if>
    <if test="limit != null">
      limit #{limit}
    </if>
  </sql>
  <insert id="insert" parameterType="sandbox.alltype.entity.base.BaseAllDataTypes">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into all_data_types
    (type_bigint, type_varchar, type_tinyint, type_smallint, type_mediumint, 
  type_int, type_date, type_float, type_double, type_decimal, 
  type_datetime, type_timestamp, type_time, type_year, type_char, 
  type_tinytext, type_enum, type_set, type_bool, type_text, 
  type_tinyblob, type_blob, type_mediumblob, type_mediumtext, type_longblob, 
  type_longtext, type_binary, type_varbinary)
    values (#{typeBigint,jdbcType=BIGINT}, #{typeVarchar,jdbcType=VARCHAR}, #{typeTinyint,jdbcType=TINYINT}, #{typeSmallint,jdbcType=SMALLINT}, #{typeMediumint,jdbcType=INTEGER}, 
  #{typeInt,jdbcType=INTEGER}, #{typeDate,jdbcType=DATE}, #{typeFloat,jdbcType=REAL}, #{typeDouble,jdbcType=DOUBLE}, #{typeDecimal,jdbcType=DECIMAL}, 
  #{typeDatetime,jdbcType=TIMESTAMP}, #{typeTimestamp,jdbcType=TIMESTAMP}, #{typeTime,jdbcType=TIME}, #{typeYear,jdbcType=DATE}, #{typeChar,jdbcType=CHAR}, 
  #{typeTinytext,jdbcType=VARCHAR}, #{typeEnum,jdbcType=CHAR}, #{typeSet,jdbcType=CHAR}, #{typeBool,jdbcType=BIT}, #{typeText,jdbcType=LONGVARCHAR}, 
  #{typeTinyblob,jdbcType=BINARY}, #{typeBlob,jdbcType=LONGVARBINARY}, #{typeMediumblob,jdbcType=LONGVARBINARY}, #{typeMediumtext,jdbcType=LONGVARCHAR}, #{typeLongblob,jdbcType=LONGVARBINARY}, 
  #{typeLongtext,jdbcType=LONGVARCHAR}, #{typeBinary,jdbcType=BINARY}, #{typeVarbinary,jdbcType=VARBINARY})
    <selectKey keyProperty="typeBigint" order="AFTER" resultType="Long">
      <if test="typeBigint == null">
        select last_insert_id()
      </if>
      <if test="typeBigint != null">
        select #{typeBigint}
      </if>
    </selectKey>
  </insert>
  <select id="selectByPk" parameterType="java.lang.Long" resultMap="BASE_RESULT_MAP">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="BASE_COLUMN_LIST" />
    from all_data_types where
    type_bigint = #{typeBigint,jdbcType=BIGINT}
  </select>
  <select id="selectByCriteria" parameterType="sandbox.alltype.entity.criteria.AllDataTypesCriteria" resultMap="BASE_RESULT_MAP">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="BASE_COLUMN_LIST" />
    from all_data_types
    <if test="_parameter != null">
      <include refid="WHERE_CLAUSE" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="PAGING" />
    <if test="forUpdate">
      for update
    </if>
  </select>
  <select id="count" parameterType="sandbox.alltype.entity.criteria.AllDataTypesCriteria" resultType="int">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from all_data_types
    <if test="_parameter != null">
      <include refid="WHERE_CLAUSE" />
    </if>
  </select>
  <update id="updateByPk" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update all_data_types
    <set>
      <if test="typeBigint != null">
        type_bigint = #{typeBigint,jdbcType=BIGINT},
      </if>
      <if test="typeVarchar != null">
        type_varchar = #{typeVarchar,jdbcType=VARCHAR},
      </if>
      <if test="typeTinyint != null">
        type_tinyint = #{typeTinyint,jdbcType=TINYINT},
      </if>
      <if test="typeSmallint != null">
        type_smallint = #{typeSmallint,jdbcType=SMALLINT},
      </if>
      <if test="typeMediumint != null">
        type_mediumint = #{typeMediumint,jdbcType=INTEGER},
      </if>
      <if test="typeInt != null">
        type_int = #{typeInt,jdbcType=INTEGER},
      </if>
      <if test="typeDate != null">
        type_date = #{typeDate,jdbcType=DATE},
      </if>
      <if test="typeFloat != null">
        type_float = #{typeFloat,jdbcType=REAL},
      </if>
      <if test="typeDouble != null">
        type_double = #{typeDouble,jdbcType=DOUBLE},
      </if>
      <if test="typeDecimal != null">
        type_decimal = #{typeDecimal,jdbcType=DECIMAL},
      </if>
      <if test="typeDatetime != null">
        type_datetime = #{typeDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="typeTimestamp != null">
        type_timestamp = #{typeTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="typeTime != null">
        type_time = #{typeTime,jdbcType=TIME},
      </if>
      <if test="typeYear != null">
        type_year = #{typeYear,jdbcType=DATE},
      </if>
      <if test="typeChar != null">
        type_char = #{typeChar,jdbcType=CHAR},
      </if>
      <if test="typeTinytext != null">
        type_tinytext = #{typeTinytext,jdbcType=VARCHAR},
      </if>
      <if test="typeEnum != null">
        type_enum = #{typeEnum,jdbcType=CHAR},
      </if>
      <if test="typeSet != null">
        type_set = #{typeSet,jdbcType=CHAR},
      </if>
      <if test="typeBool != null">
        type_bool = #{typeBool,jdbcType=BIT},
      </if>
      <if test="typeText != null">
        type_text = #{typeText,jdbcType=LONGVARCHAR},
      </if>
      <if test="typeTinyblob != null">
        type_tinyblob = #{typeTinyblob,jdbcType=BINARY},
      </if>
      <if test="typeBlob != null">
        type_blob = #{typeBlob,jdbcType=LONGVARBINARY},
      </if>
      <if test="typeMediumblob != null">
        type_mediumblob = #{typeMediumblob,jdbcType=LONGVARBINARY},
      </if>
      <if test="typeMediumtext != null">
        type_mediumtext = #{typeMediumtext,jdbcType=LONGVARCHAR},
      </if>
      <if test="typeLongblob != null">
        type_longblob = #{typeLongblob,jdbcType=LONGVARBINARY},
      </if>
      <if test="typeLongtext != null">
        type_longtext = #{typeLongtext,jdbcType=LONGVARCHAR},
      </if>
      <if test="typeBinary != null">
        type_binary = #{typeBinary,jdbcType=BINARY},
      </if>
      <if test="typeVarbinary != null">
        type_varbinary = #{typeVarbinary,jdbcType=VARBINARY},
      </if>
    </set>
    where type_bigint = #{typeBigint,jdbcType=BIGINT}
  </update>
  <update id="updateByCriteria" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update all_data_types
    <set>
      <if test="record.typeBigint != null">
        type_bigint = #{record.typeBigint,jdbcType=BIGINT},
      </if>
      <if test="record.typeVarchar != null">
        type_varchar = #{record.typeVarchar,jdbcType=VARCHAR},
      </if>
      <if test="record.typeTinyint != null">
        type_tinyint = #{record.typeTinyint,jdbcType=TINYINT},
      </if>
      <if test="record.typeSmallint != null">
        type_smallint = #{record.typeSmallint,jdbcType=SMALLINT},
      </if>
      <if test="record.typeMediumint != null">
        type_mediumint = #{record.typeMediumint,jdbcType=INTEGER},
      </if>
      <if test="record.typeInt != null">
        type_int = #{record.typeInt,jdbcType=INTEGER},
      </if>
      <if test="record.typeDate != null">
        type_date = #{record.typeDate,jdbcType=DATE},
      </if>
      <if test="record.typeFloat != null">
        type_float = #{record.typeFloat,jdbcType=REAL},
      </if>
      <if test="record.typeDouble != null">
        type_double = #{record.typeDouble,jdbcType=DOUBLE},
      </if>
      <if test="record.typeDecimal != null">
        type_decimal = #{record.typeDecimal,jdbcType=DECIMAL},
      </if>
      <if test="record.typeDatetime != null">
        type_datetime = #{record.typeDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.typeTimestamp != null">
        type_timestamp = #{record.typeTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.typeTime != null">
        type_time = #{record.typeTime,jdbcType=TIME},
      </if>
      <if test="record.typeYear != null">
        type_year = #{record.typeYear,jdbcType=DATE},
      </if>
      <if test="record.typeChar != null">
        type_char = #{record.typeChar,jdbcType=CHAR},
      </if>
      <if test="record.typeTinytext != null">
        type_tinytext = #{record.typeTinytext,jdbcType=VARCHAR},
      </if>
      <if test="record.typeEnum != null">
        type_enum = #{record.typeEnum,jdbcType=CHAR},
      </if>
      <if test="record.typeSet != null">
        type_set = #{record.typeSet,jdbcType=CHAR},
      </if>
      <if test="record.typeBool != null">
        type_bool = #{record.typeBool,jdbcType=BIT},
      </if>
      <if test="record.typeText != null">
        type_text = #{record.typeText,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.typeTinyblob != null">
        type_tinyblob = #{record.typeTinyblob,jdbcType=BINARY},
      </if>
      <if test="record.typeBlob != null">
        type_blob = #{record.typeBlob,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.typeMediumblob != null">
        type_mediumblob = #{record.typeMediumblob,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.typeMediumtext != null">
        type_mediumtext = #{record.typeMediumtext,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.typeLongblob != null">
        type_longblob = #{record.typeLongblob,jdbcType=LONGVARBINARY},
      </if>
      <if test="record.typeLongtext != null">
        type_longtext = #{record.typeLongtext,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.typeBinary != null">
        type_binary = #{record.typeBinary,jdbcType=BINARY},
      </if>
      <if test="record.typeVarbinary != null">
        type_varbinary = #{record.typeVarbinary,jdbcType=VARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="WHERE_CLAUSE_FOR_UPDATE" />
    </if>
  </update>
  <delete id="deleteByPk" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from all_data_types
    where type_bigint = #{typeBigint,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByCriteria" parameterType="sandbox.alltype.entity.criteria.AllDataTypesCriteria">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from all_data_types
    <if test="_parameter != null">
      <include refid="WHERE_CLAUSE" />
    </if>
  </delete>
</mapper>